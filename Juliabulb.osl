shader Juliabulb(
  point C = point(.5, .5, .5),
	float Power = 9,
	int Iterations = 10,
	float Bailout = 10,
	float Scale = .5,
  float DistanceDelta = 0,
	output float Distance = 0
)
{
	point z = P / Scale;
	float dr = 1.0;
	float r = 0.0;
	for (int i = 0; i < Iterations; i++) {
		r = length(z);
		if (r > Bailout) break;

		// convert to polar coordinates
		float theta = acos(z[2]/r);
		float phi = atan2(z[1],z[0]);
		dr =  pow(r, Power-1.0)*Power*dr + 1.0;

		// scale and rotate the point
		float zr = pow(r,Power);
		theta *= Power;
		phi *= Power;

		// convert back to cartesian coordinates
		z = zr * point(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));
		z += C;
	}
	Distance = (0.5*log(r)*r/dr - DistanceDelta) * Scale;
}
